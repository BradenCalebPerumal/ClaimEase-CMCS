@model TaskOneDraft.Models.Claims

@{
    ViewData["Title"] = "Claims";
}

<style>
    .claims-container {
        margin-bottom: 100px;
    }

    glow {
        0%

    {
        box-shadow: 0 0 10px #00ffcc, 0 0 20px #00ffcc, 0 0 30px #00ffcc;
    }

    100% {
        box-shadow: 0 0 20px #00ffcc, 0 0 30px #00ffcc, 0 0 40px #00ffcc;
    }

    }

    .form-group label {
        display: block;
        text-align: left;
        color: black;
        font-weight: bold;
        margin-bottom: 5px;
        text-shadow: 0 0 2px #00ffcc;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 2px solid #00ffcc; /* Neon border */
        border-radius: 4px;
        background-color: transparent;
        color: black; /* Adjusted for readability */
        transition: border 0.3s;
    }

        .form-control:focus {
            border-color: #1affff; /* Lighter neon on focus */
            outline: none;
            box-shadow: 0 0 8px #00ffcc;
        }

    .btn-primary {
        background-color: #00ffcc; /* Neon blue for the button */
        border: none;
        padding: 10px 20px;
        color: black; /* Black text */
        width: 100%; /* Button width */
        border-radius: 4px;
        cursor: pointer;
        margin: 5px 0;
        transition: all 0.3s ease; /* Smooth transition */
    }

        .btn-primary:hover {
            background-color: blue; /* Lighter neon */
            box-shadow: 0 0 10px #00ffcc, 0 0 20px #00ffcc, 0 0 30px #00ffcc;
        }

    .login-title {
        color: black;
        text-shadow: 0 0 2px #00ffcc;
    }
        .btn-primary:active {
            transform: translateY(2px); /* Press effect */
        }

    .row {
        margin-bottom: 15px;
    }
</style>

<div class="claims-container">
    <h2 class="login-title">Submit Claims</h2>
    <form asp-action="Claims" method="post" enctype="multipart/form-data" id="claimForm" class="claim-form">
        <!-- Lecturer ID Field -->
        <div class="form-group">
            <label for="lecturerId">Lecturer ID</label>
            <input id="lecturerId" name="LecturerID" class="form-control" readonly /> <!-- Read-only field -->
            <span asp-validation-for="LecturerID" class="text-danger"></span>
        </div>



        <!-- First Name and Last Name side by side -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="FirstName">First Name</label>
                    <input asp-for="FirstName" class="form-control" />
                    <span asp-validation-for="FirstName" class="text-danger" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="LastName">Last Name</label>
                    <input asp-for="LastName" class="form-control" />
                    <span asp-validation-for="LastName" class="text-danger" />
                </div>
            </div>
        </div>

        <!-- Claim Period Start and End side by side -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="ClaimsPeriodStart">Claim Period Start</label>
                    <input asp-for="ClaimsPeriodStart" type="date" class="form-control" />
                    <span asp-validation-for="ClaimsPeriodStart" class="text-danger" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="ClaimsPeriodEnd">Claim Period End</label>
                    <input asp-for="ClaimsPeriodEnd" type="date" class="form-control" />
                    <span asp-validation-for="ClaimsPeriodEnd" class="text-danger" />
                </div>
            </div>
        </div>

        <!-- Hours Worked and Rate per Hour side by side -->
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="HoursWorked">Hours Worked</label>
                    <input asp-for="HoursWorked" class="form-control" id="hoursWorked" />
                    <span asp-validation-for="HoursWorked" class="text-danger" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="RateHour">Rate per Hour</label>
                    <input asp-for="RateHour" class="form-control" id="ratePerHour" />
                    <span asp-validation-for="RateHour" class="text-danger" />
                </div>
            </div>
        </div>
        <!-- Overtime Section -->
        <div class="form-group">
            <label>
                <input type="checkbox" id="addOvertime" /> Add Overtime
            </label>
        </div>
        <div id="overtimeFields" style="display: none;">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="OvertimeHours">Overtime Hours</label>
                        <input asp-for="OvertimeHours" class="form-control" id="overtimeHours" />
                        <span asp-validation-for="OvertimeHours" class="text-danger" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="OvertimeRate">Overtime Rate</label>
                        <input asp-for="OvertimeRate" class="form-control" id="overtimeRate" readonly />
                        <span asp-validation-for="OvertimeRate" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Description of Work takes full width -->
        <div class="form-group">
            <label asp-for="DescriptionOfWork">Description of Work</label>
            <input asp-for="DescriptionOfWork" class="form-control" />
            <span asp-validation-for="DescriptionOfWork" class="text-danger"></span>
        </div>

        <!-- Total Amount (Read-only) -->
        <div class="form-group">
            <label>Total Amount</label>
            <input type="text" id="totalAmount" class="form-control" readonly />
        </div>

        <!-- Supporting Documents -->
        <div class="form-group">
            <label>Attach Supporting Documents</label>
            <input type="file" name="supportingDocument" class="form-control" id="supportingDocument" />
        </div>

        <input asp-for="UserID" type="hidden" />
        <input asp-for="ClaimStatus" type="hidden" />

        <button type="submit" class="btn-primary">Submit</button>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />

    <script>
        $(document).ready(function () {
            // Toggle overtime fields
            $('#addOvertime').change(function () {
                if (this.checked) {
                    $('#overtimeFields').slideDown();
                    calculateOvertimeRate(); // Populate overtime rate dynamically
                } else {
                    $('#overtimeFields').slideUp();
                    $('#overtimeHours').val('');
                    $('#overtimeRate').val('');
                }
            });

            // Calculate overtime rate dynamically
            function calculateOvertimeRate() {
                const ratePerHour = parseFloat($('#ratePerHour').val()) || 0;
                const overtimeRate = ratePerHour * 1.5;
                $('#overtimeRate').val(overtimeRate.toFixed(2)); // Set calculated overtime rate
            }

            // Calculate total amount dynamically
            function calculateTotal() {
                const hoursWorked = parseFloat($('#hoursWorked').val()) || 0;
                const ratePerHour = parseFloat($('#ratePerHour').val()) || 0;
                const overtimeHours = parseFloat($('#overtimeHours').val()) || 0;
                const overtimeRate = parseFloat($('#overtimeRate').val()) || 0;

                const normalPay = hoursWorked * ratePerHour;
                const overtimePay = overtimeHours * overtimeRate;
                const totalAmount = normalPay + overtimePay;

                $('#totalAmount').val(totalAmount.toFixed(2)); // Update total amount field
            }
            

            // Validate inputs
            function validateInputs() {
                let isValid = true;

                // Validate negative numbers
                $('.form-control').each(function () {
                    const value = parseFloat($(this).val());
                    if ($(this).attr('type') !== 'file' && value < 0) {
                        alert('Negative numbers are not allowed.');
                        $(this).val('');
                        isValid = false;
                        return false;
                    }
                });
                $('#LecturerID').on('input', function () {
                    const value = $(this).val();
                    const numericValue = value.replace(/[^0-9]/g, ''); // Remove non-numeric characters
                    if (value !== numericValue) {
                        alert('Only numeric values are allowed in Lecturer ID.');
                        $(this).val(numericValue);
                    }
                });
                // Validate dates
                const startDate = new Date($('#ClaimsPeriodStart').val());
                const endDate = new Date($('#ClaimsPeriodEnd').val());

                if (startDate && endDate && startDate > endDate) {
                    alert('The start date cannot be later than the end date.');
                    $('#ClaimsPeriodStart').val('');
                    $('#ClaimsPeriodEnd').val('');
                    isValid = false;
                }

                return isValid;
            }

            // Bind validations and calculations to input changes
            $('#hoursWorked, #ratePerHour, #overtimeHours').on('input', function () {
                if (validateInputs()) {
                    calculateOvertimeRate();
                    calculateTotal();
                }
            });

            // Validate dates on change
            $('#ClaimsPeriodStart, #ClaimsPeriodEnd').on('change', function () {
                validateInputs();
            });

            // Handle form submission with Toastr notifications
            $('#claimForm').on('submit', function (event) {
                event.preventDefault();

                toastr.clear();

                let hoursWorked = parseFloat($('#hoursWorked').val()) || 0;
                let ratePerHour = parseFloat($('#ratePerHour').val()) || 0;
                let overtimeHours = parseFloat($('#overtimeHours').val()) || 0;
                let overtimeRate = parseFloat($('#overtimeRate').val()) || 0;

                let normalPay = hoursWorked * ratePerHour;
                let overtimePay = overtimeHours * overtimeRate;
                let totalAmount = normalPay + overtimePay;

                toastr.success('Total amount due: R' + totalAmount.toFixed(2), 'Amount Calculated', {
                    "positionClass": "toast-top-right",
                    "timeOut": "5000",
                    "closeButton": true,
                    "progressBar": true
                });

                setTimeout(function () {
                    toastr.success('Claim has been submitted successfully!', 'Submission Successful', {
                        "positionClass": "toast-top-right",
                        "timeOut": "5000",
                        "closeButton": true,
                        "progressBar": true
                    });

                    setTimeout(function () {
                        $('#claimForm')[0].submit(); // Submit the form
                    }, 1000);
                }, 1000);
            });
            }); $(document).ready(function () {
            // Fetch the Lecturer ID (FirstName) dynamically
            $.ajax({
                url: '/Claims/GetLecturerFirstName', // Replace with your controller's endpoint
                type: 'GET',
                success: function (response) {
                    $('#lecturerId').val(response); // Populate the LecturerID field
                },
                error: function () {
                    alert("Error fetching Lecturer ID");
                }
            });
        });
    </script>
}
