@model IEnumerable<(TaskOneDraft.Models.Claims Claim, string FirstName)>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">

<style>
    h2 {
        color: #1a1a1a;
        text-shadow: 0 0 5px #00ffcc;
        margin-bottom: 20px;
        font-size: 30px;
    }

    .search-container {
        margin-bottom: 20px;
    }

    .search-input {
        border: 2px solid #00ced1;
        border-radius: 4px;
        padding: 5px 10px;
        margin-right: 10px;
    }

    .btn-reset {
        background-color: #ff6347;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .btn-reset:hover {
            background-color: #d9534f;
            color: white;
        }

    /* Flip Card Styles */
    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
    }

    .flip-card {
        background-color: transparent;
        width: 300px;
        height: 260px;
        perspective: 1000px;
        margin-bottom: 100px; /* Added bottom margin */
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.8s;
        transform-style: preserve-3d;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;
        border-radius: 10px;
        padding: 20px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        color: white;
    }

    .flip-card-front {
        background: linear-gradient(135deg, white, #00ced1);
    }

    .flip-card-back {
        background: linear-gradient(135deg, #00ced1, white);
        transform: rotateY(180deg);
    }

    .claim-details {
        font-size: 14px;
        line-height: 1.6;
        font-weight: bold;
        margin-top: 5px;
    }

    .claim-id {
        color: #1a1a1a;
        text-shadow: 0 0 5px #00ffcc;
        font-weight: bold;
        font-size: 18px;
        margin-bottom: 10px;
        
    }

    .download-link {
        background: linear-gradient(135deg, #ff6347, #ff4500);
        color: white;
        padding: 10px 20px;
        border-radius: 25px;
        font-size: 14px;
        font-weight: bold;
        text-decoration: none;
        transition: background 0.3s ease;
        box-shadow: 0 5px 15px rgba(255, 99, 71, 0.4);
    }

        .download-link:hover {
            background: linear-gradient(135deg, #ff4500, #e74c3c);
            box-shadow: 0 8px 20px rgba(231, 76, 60, 0.6);
        }

    .claim-details-title {
        font-size: 16px;
        font-weight: bold;
        margin-top: 15px;
    }

    .btn-reset {
        background: linear-gradient(135deg, #ff6347, #ff4500);
        color: white;
        font-size: 14px;
        padding: 5px 15px;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: background 0.3s ease;
    }

        .btn-reset:hover {
            background: linear-gradient(135deg, #ff4500, #e74c3c);
        }
</style>

<h2>View Claims and Supporting Documents</h2>

<div class="search-container">
    <label for="startDate">Start Date:</label>
    <input type="date" id="startDate" class="search-input">

    <label for="endDate">End Date:</label>
    <input type="date" id="endDate" class="search-input">

    <button id="resetButton" class="btn-reset">Reset</button>
</div>

@if (Model.Any())
{
    <div class="card-container" id="claimsCardContainer">
        @foreach (var enrichedClaim in Model)
        {
            var claim = enrichedClaim.Claim;
            var firstName = enrichedClaim.FirstName;

            <div class="flip-card">
                <div class="flip-card-inner">
                    <!-- Front of the card -->
                    <div class="flip-card-front">
                        <div class="claim-id">Claim ID: @claim.ID</div>
                        <p class="claim-details">Start Date: @claim.ClaimsPeriodStart.ToString("yyyy-MM-dd")</p>
                        <p class="claim-details">End Date: @claim.ClaimsPeriodEnd.ToString("yyyy-MM-dd")</p>
                        <p class="claim-details">Amount: @claim.TotalAmount.ToString("C", new System.Globalization.CultureInfo("en-ZA"))</p>
                        <p class="claim-details">Submitted: @claim.DateSubmitted.ToString("yyyy-MM-dd")</p>
                    </div>

                    <!-- Back of the card -->
                    <div class="flip-card-back">
                        <p class="claim-details-title">Status: @claim.ClaimStatus</p>
                        <p class="claim-details">EMP ID: @firstName</p>
                        @if (claim.SupportingDocuments != null)
                        {
                            <a href="@Url.Action("DownloadFilee", new { id = claim.ID })" class="download-link">Download Documents</a>
                        }
                        else
                        {
                            <p>No supporting documents</p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

else
{
<p class="alert alert-warning">No claims found.</p>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Filter cards based on date range input
        $('#startDate, #endDate').on('change', function () {
            var startDate = new Date($('#startDate').val());
            var endDate = new Date($('#endDate').val());

            // Only filter if both dates are selected
            if (!isNaN(startDate.getTime()) && !isNaN(endDate.getTime())) {
                $('#claimsCardContainer .flip-card').filter(function () {
                    var claimDate = new Date($(this).find('.claim-details:first').text().replace('Start Date: ', ''));
                    $(this).toggle(claimDate >= startDate && claimDate <= endDate);
                });
            }
        });

        // Reset button functionality
        $('#resetButton').click(function () {
            // Clear the date inputs
            $('#startDate').val('');
            $('#endDate').val('');

            // Show all flip cards
            $('#claimsCardContainer .flip-card').show();
        });
    });
</script>
